Weasley Clock App Tests

  - Users 
    x Login
      x Can create new user
        x new user form data captures correctly and sent to POST
        x state correctly updates upon successful login
      x User can login
        x known user form data captures correctly and sent to POST
        x state correctly updates upon successful login
    x Friends
      x Can add/remove friend
      x Can view friend's clock

  - Clock
    x ClockFace
      x Displays users locations
    x TopNav
      x Can add/remove location
      x Can update location


Testing Notes:

* Started with Enzyme, discovered it doesn't support hooks well, switched to react-testing-lib
* 3 As of testing (Arrange, Act, Assert)
* DRY vs Granularity (I repeated for more clarity)
* Granularity vs speed (my project is small so I decided to make them very clear even tho that wouldn't work with a larger project)
* Custom messages with Jest
* Watch out for the order that you import, react mock outside of beforeEach threw error
* I didn't do TDD but I should have.  Writing tests forced me be confident in the logic of my code in order to figure out what needed to be tested
* Realized I needed an id to test my add/remove friends; initially tried to solve with friend-ele-count, switched to friend-ele-username because more clear and consistent
* (What should you test) When the component is mock-rendered it can do everything the normal component can do but not all of those functions are exposed unless you set them up to be spied upon so I can make the component do something and see what happens after easier than I can check to see what exactly is happening?